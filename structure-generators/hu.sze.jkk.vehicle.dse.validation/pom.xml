<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <artifactId>hu.sze.jkk.vehicle.dse.validation</artifactId>
  <parent>  
    <artifactId>hu.sze.jkk.generators.parent</artifactId>
    <groupId>hu.sze.jkk.generators</groupId>
    <version>0.0.1-SNAPSHOT</version>
    <relativePath>../hu.sze.jkk.generators.parent/pom.xml</relativePath>
  </parent>
  
  <build>
    <sourceDirectory>src-gen</sourceDirectory>
     
    <resources>
       <resource>
        <directory>src</directory>
        <excludes>
          <exclude>**/*.java</exclude>
        </excludes>
      </resource>
      <resource>
        <directory>src-gen</directory>
        <excludes>
          <exclude>**/*.java</exclude>
        </excludes>
      </resource>
      
    </resources>
    
    <plugins>
      
      <plugin>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.8.0</version>
        <configuration>
          <source>1.8</source>
          <target>1.8</target>
        </configuration>
      </plugin>
      <plugin>
				<groupId>org.eclipse.xtend</groupId>
				<artifactId>xtend-maven-plugin</artifactId>
				<configuration>
					<!-- need to prefix by basedir to generate to currently built module -->
					<outputDirectory>${basedir}/xtend-gen</outputDirectory>
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>compile</goal>
							<goal>testCompile</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
      <plugin>
		  <groupId>org.eclipse.viatra</groupId>
		  <artifactId>viatra-maven-plugin</artifactId>
		  <version>2.2.0</version>
		  <!-- Binding execution to the code generation lifecycle phase -->
		  <executions>
		    <execution>
		      <goals>
		        <goal>generate</goal>
		      </goals>
		    </execution>
		  </executions>
		  <configuration>
		    <!-- Output directory - required -->
		    <outputDirectory>src-gen</outputDirectory>
		    <metamodels>
		      <metamodel>
		        <!-- Select one of the following depending on where is your metamodel defined -->
		
		        <!-- (a) Java class for the EMF EPackage - use this if generated EMF code is in the classpath -->
		        <packageClass>hu.sze.jkk.vehicle.config.vehicleconfig.VehicleconfigPackage</packageClass>
		        <!-- (b) genmodel file used for generating the EMF model classes - use this if EMF model is in the same project -->
		        <!-- <genmodelUri>model/model.genmodel</genmodelUri> -->
		      </metamodel>
		    </metamodels>
		    <!-- Since 1.5, you can use the project dependencies instead of specific Maven dependencies - optional -->
		    <useProjectDependencies>true</useProjectDependencies>
		  </configuration>
		  <dependencies>
		    <!-- Dependency required for the cps domain project (that contains the generated EPackage), unless you set useProjectDependencies -->
		    <dependency>
		        <groupId>hu.sze.jkk.generators</groupId>
			  	<artifactId>
			  		hu.sze.jkk.vehicle.config
			  	</artifactId>
			  	<version>0.0.1-SNAPSHOT</version>
		    </dependency>
		  </dependencies>
		</plugin>
    </plugins>
  </build>
  <dependencies>
	  <dependency>
	     <groupId>hu.sze.jkk.generators</groupId>
	     <artifactId>
	         hu.sze.kinematics.robot.description.model
	     </artifactId>
	     <version>0.0.1-SNAPSHOT</version>
	   </dependency>
	  
	  <dependency>
	  	<groupId>hu.sze.jkk.generators</groupId>
	  	<artifactId>hu.sze.jkk.vehicle.config</artifactId>
	  	<version>0.0.1-SNAPSHOT</version>
	  </dependency>
  </dependencies>
</project>
