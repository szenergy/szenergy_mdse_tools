// automatically generated by Xtext
grammar hu.sze.aut.diffrobot.dse.DiffRobotDsl with org.eclipse.xtext.common.Terminals

import "http://jkk.sze.hu/diffrobot" 
import "http://www.eclipse.org/emf/2002/Ecore" as ecore

Robot returns Robot:
	{Robot}
	'robot'
	name=EString
	'{'
		('rootaxis' rootaxis=[WheelAxis|EString])?
		('wheelaxes' '{' wheelaxis+=WheelAxis ( "," wheelaxis+=WheelAxis)* '}' )?
		('kinematicparameters' kinematicparameters=KinematicParameters)?
		('wheelparemeters' wheelparemeters=WheelParemeters)?
		('hull' hull=HullComponent)?
		('dynamicparameters' dynamicparameters=DynamicParameters)?
		('sensor' '{' sensor+=Sensor ( "," sensor+=Sensor)* '}' )?
	'}';






Sensor returns Sensor:
	Camera;





WheelAxis returns WheelAxis:
	{WheelAxis}
	'axis' name=EString
	'{'
		('wheels' wheels=EInt)?
		('axis' axis=AxisOrientation)?
		('length' length=EDouble)?
		('wheelparemeters' wheelparemeters=[WheelParemeters|EString])?
		('axislocation' axislocation=AxisLocation)?
	'}';

KinematicParameters returns KinematicParameters:
	{KinematicParameters}
	'KinematicParameters'
	;

WheelParemeters returns WheelParemeters:
	{WheelParemeters}
	name=EString
	'{'
		('radius' radius=EDouble)?
		('mass' mass=EDouble)?
	'}';

EString returns ecore::EString:
	STRING | ID;

HullComponent returns HullComponent:
	{HullComponent}
	'{'
		('mass' mass=EDouble)?
		('width' width=EDouble)?
		('depth' depth=EDouble)?
		('mesh' '{' mesh+=Mesh ( "," mesh+=Mesh)* '}' )?
	'}';

DynamicParameters returns DynamicParameters:
	{DynamicParameters}
	'DynamicParameters'
	;

EInt returns ecore::EInt:
	'-'? INT;

enum AxisOrientation returns AxisOrientation:
				HORIZONTAL = 'HORIZONTAL' | VERTICAL = 'VERTICAL';

EDouble returns ecore::EDouble:
	'-'? INT? '.' INT (('E'|'e') '-'? INT)?;

AxisLocation returns AxisLocation:
	{AxisLocation}
	'{'
		('displacement' displacement=Displacement)?
		('rotation' rotation=Rotation)?
	'}';

Displacement returns Displacement:
	{Displacement}
	'{'
		('x' x=EDouble)?
		('y' y=EDouble)?
		('z' z=EDouble)?
	'}';

Rotation returns Rotation:
	{Rotation}
	'{'
		('roll' roll=EDouble)?
		('pitch' pitch=EDouble)?
		('yaw' yaw=EDouble)?
	'}';

Mesh returns Mesh:
	{Mesh}
	name=EString
	'{'
		('path' path=EString)?
		('package' package=EString)?
	'}';

Camera returns Camera:
	{Camera}
	'Camera'
	;
