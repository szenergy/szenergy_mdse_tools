/*
 * generated by Xtext 2.21.0
 */
package hu.sze.aut.fuzzy.hybrid.system.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Action;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.CrossReference;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder.AbstractGrammarElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class FuzzyDslGrammarAccess extends AbstractGrammarElementFinder {
	
	public class HybridSystemElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "hu.sze.aut.fuzzy.hybrid.system.FuzzyDsl.HybridSystem");
		private final RuleCall cSimpleSystemParserRuleCall = (RuleCall)rule.eContents().get(1);
		
		//HybridSystem System:
		//	SimpleSystem;
		@Override public ParserRule getRule() { return rule; }
		
		//SimpleSystem
		public RuleCall getSimpleSystemParserRuleCall() { return cSimpleSystemParserRuleCall; }
	}
	public class SimpleSystemElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "hu.sze.aut.fuzzy.hybrid.system.FuzzyDsl.SimpleSystem");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cSystemAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cHybridsystemKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cCommaKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Keyword cRateKeyword_3_1 = (Keyword)cGroup_3.eContents().get(1);
		private final Keyword cColonKeyword_3_2 = (Keyword)cGroup_3.eContents().get(2);
		private final Assignment cRateAssignment_3_3 = (Assignment)cGroup_3.eContents().get(3);
		private final RuleCall cRateDOUBLETerminalRuleCall_3_3_0 = (RuleCall)cRateAssignment_3_3.eContents().get(0);
		private final Keyword cLocationsKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Keyword cColonKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cLocationAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cLocationLocationParserRuleCall_6_0 = (RuleCall)cLocationAssignment_6.eContents().get(0);
		private final Assignment cLocationAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cLocationLocationParserRuleCall_7_0 = (RuleCall)cLocationAssignment_7.eContents().get(0);
		private final Keyword cEndKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Group cGroup_9 = (Group)cGroup.eContents().get(9);
		private final Keyword cFuzzysetcollectionKeyword_9_0 = (Keyword)cGroup_9.eContents().get(0);
		private final Assignment cFuzzysetAssignment_9_1 = (Assignment)cGroup_9.eContents().get(1);
		private final RuleCall cFuzzysetFuzzySetParserRuleCall_9_1_0 = (RuleCall)cFuzzysetAssignment_9_1.eContents().get(0);
		private final Assignment cFuzzysetAssignment_9_2 = (Assignment)cGroup_9.eContents().get(2);
		private final RuleCall cFuzzysetFuzzySetParserRuleCall_9_2_0 = (RuleCall)cFuzzysetAssignment_9_2.eContents().get(0);
		private final Keyword cEndfuzzysetKeyword_9_3 = (Keyword)cGroup_9.eContents().get(3);
		private final Keyword cRulesetKeyword_10 = (Keyword)cGroup.eContents().get(10);
		private final Assignment cRulesetAssignment_11 = (Assignment)cGroup.eContents().get(11);
		private final RuleCall cRulesetRuleSetParserRuleCall_11_0 = (RuleCall)cRulesetAssignment_11.eContents().get(0);
		private final Assignment cRulesetAssignment_12 = (Assignment)cGroup.eContents().get(12);
		private final RuleCall cRulesetRuleSetParserRuleCall_12_0 = (RuleCall)cRulesetAssignment_12.eContents().get(0);
		private final Keyword cEndrulesetKeyword_13 = (Keyword)cGroup.eContents().get(13);
		private final Keyword cActionsKeyword_14 = (Keyword)cGroup.eContents().get(14);
		private final Assignment cActiondefinitionAssignment_15 = (Assignment)cGroup.eContents().get(15);
		private final RuleCall cActiondefinitionActionParserRuleCall_15_0 = (RuleCall)cActiondefinitionAssignment_15.eContents().get(0);
		private final Assignment cActiondefinitionAssignment_16 = (Assignment)cGroup.eContents().get(16);
		private final RuleCall cActiondefinitionActionParserRuleCall_16_0 = (RuleCall)cActiondefinitionAssignment_16.eContents().get(0);
		private final Keyword cEndactionsKeyword_17 = (Keyword)cGroup.eContents().get(17);
		private final Group cGroup_18 = (Group)cGroup.eContents().get(18);
		private final Keyword cVariablesKeyword_18_0 = (Keyword)cGroup_18.eContents().get(0);
		private final Assignment cVariableAssignment_18_1 = (Assignment)cGroup_18.eContents().get(1);
		private final RuleCall cVariableConVariableParserRuleCall_18_1_0 = (RuleCall)cVariableAssignment_18_1.eContents().get(0);
		private final Assignment cVariableAssignment_18_2 = (Assignment)cGroup_18.eContents().get(2);
		private final RuleCall cVariableConVariableParserRuleCall_18_2_0 = (RuleCall)cVariableAssignment_18_2.eContents().get(0);
		private final Keyword cEndvariablesKeyword_18_3 = (Keyword)cGroup_18.eContents().get(3);
		private final Keyword cTransitionsKeyword_19 = (Keyword)cGroup.eContents().get(19);
		private final Assignment cTransitionAssignment_20 = (Assignment)cGroup.eContents().get(20);
		private final RuleCall cTransitionTransitionParserRuleCall_20_0 = (RuleCall)cTransitionAssignment_20.eContents().get(0);
		private final Assignment cTransitionAssignment_21 = (Assignment)cGroup.eContents().get(21);
		private final RuleCall cTransitionTransitionParserRuleCall_21_0 = (RuleCall)cTransitionAssignment_21.eContents().get(0);
		private final Keyword cEndtransitionsKeyword_22 = (Keyword)cGroup.eContents().get(22);
		private final Keyword cBeginKeyword_23 = (Keyword)cGroup.eContents().get(23);
		private final Keyword cStartlocationKeyword_24 = (Keyword)cGroup.eContents().get(24);
		private final Assignment cStartlocationAssignment_25 = (Assignment)cGroup.eContents().get(25);
		private final CrossReference cStartlocationLocationCrossReference_25_0 = (CrossReference)cStartlocationAssignment_25.eContents().get(0);
		private final RuleCall cStartlocationLocationEStringParserRuleCall_25_0_1 = (RuleCall)cStartlocationLocationCrossReference_25_0.eContents().get(1);
		private final Keyword cErrorlocationKeyword_26 = (Keyword)cGroup.eContents().get(26);
		private final Assignment cErrorlocationAssignment_27 = (Assignment)cGroup.eContents().get(27);
		private final CrossReference cErrorlocationLocationCrossReference_27_0 = (CrossReference)cErrorlocationAssignment_27.eContents().get(0);
		private final RuleCall cErrorlocationLocationEStringParserRuleCall_27_0_1 = (RuleCall)cErrorlocationLocationCrossReference_27_0.eContents().get(1);
		private final Keyword cEndsystemKeyword_28 = (Keyword)cGroup.eContents().get(28);
		
		//SimpleSystem System:
		//	{System}
		//	'hybridsystem' name=EString (',' 'rate' ':' rate=DOUBLE)?
		//	'locations' ':'
		//	location+=Location location+=Location*
		//	'end' ('fuzzysetcollection'
		//	fuzzyset+=FuzzySet fuzzyset+=FuzzySet*
		//	'endfuzzyset')?
		//	'ruleset'
		//	ruleset+=RuleSet ruleset+=RuleSet*
		//	'endruleset'
		//	'actions'
		//	actiondefinition+=Action actiondefinition+=Action*
		//	'endactions' ('variables'
		//	variable+=ConVariable variable+=ConVariable*
		//	'endvariables')?
		//	'transitions'
		//	transition+=Transition transition+=Transition*
		//	'endtransitions'
		//	'begin'
		//	'startlocation' startlocation=[Location|EString]
		//	'errorlocation' errorlocation=[Location|EString]
		//	'endsystem';
		@Override public ParserRule getRule() { return rule; }
		
		//{System} 'hybridsystem' name=EString (',' 'rate' ':' rate=DOUBLE)? 'locations' ':' location+=Location
		//location+=Location* 'end' ('fuzzysetcollection' fuzzyset+=FuzzySet fuzzyset+=FuzzySet* 'endfuzzyset')? 'ruleset'
		//ruleset+=RuleSet ruleset+=RuleSet* 'endruleset' 'actions' actiondefinition+=Action actiondefinition+=Action*
		//'endactions' ('variables' variable+=ConVariable variable+=ConVariable* 'endvariables')? 'transitions'
		//transition+=Transition transition+=Transition* 'endtransitions' 'begin' 'startlocation'
		//startlocation=[Location|EString] 'errorlocation' errorlocation=[Location|EString] 'endsystem'
		public Group getGroup() { return cGroup; }
		
		//{System}
		public Action getSystemAction_0() { return cSystemAction_0; }
		
		//'hybridsystem'
		public Keyword getHybridsystemKeyword_1() { return cHybridsystemKeyword_1; }
		
		//name=EString
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }
		
		//(',' 'rate' ':' rate=DOUBLE)?
		public Group getGroup_3() { return cGroup_3; }
		
		//','
		public Keyword getCommaKeyword_3_0() { return cCommaKeyword_3_0; }
		
		//'rate'
		public Keyword getRateKeyword_3_1() { return cRateKeyword_3_1; }
		
		//':'
		public Keyword getColonKeyword_3_2() { return cColonKeyword_3_2; }
		
		//rate=DOUBLE
		public Assignment getRateAssignment_3_3() { return cRateAssignment_3_3; }
		
		//DOUBLE
		public RuleCall getRateDOUBLETerminalRuleCall_3_3_0() { return cRateDOUBLETerminalRuleCall_3_3_0; }
		
		//'locations'
		public Keyword getLocationsKeyword_4() { return cLocationsKeyword_4; }
		
		//':'
		public Keyword getColonKeyword_5() { return cColonKeyword_5; }
		
		//location+=Location
		public Assignment getLocationAssignment_6() { return cLocationAssignment_6; }
		
		//Location
		public RuleCall getLocationLocationParserRuleCall_6_0() { return cLocationLocationParserRuleCall_6_0; }
		
		//location+=Location*
		public Assignment getLocationAssignment_7() { return cLocationAssignment_7; }
		
		//Location
		public RuleCall getLocationLocationParserRuleCall_7_0() { return cLocationLocationParserRuleCall_7_0; }
		
		//'end'
		public Keyword getEndKeyword_8() { return cEndKeyword_8; }
		
		//('fuzzysetcollection' fuzzyset+=FuzzySet fuzzyset+=FuzzySet* 'endfuzzyset')?
		public Group getGroup_9() { return cGroup_9; }
		
		//'fuzzysetcollection'
		public Keyword getFuzzysetcollectionKeyword_9_0() { return cFuzzysetcollectionKeyword_9_0; }
		
		//fuzzyset+=FuzzySet
		public Assignment getFuzzysetAssignment_9_1() { return cFuzzysetAssignment_9_1; }
		
		//FuzzySet
		public RuleCall getFuzzysetFuzzySetParserRuleCall_9_1_0() { return cFuzzysetFuzzySetParserRuleCall_9_1_0; }
		
		//fuzzyset+=FuzzySet*
		public Assignment getFuzzysetAssignment_9_2() { return cFuzzysetAssignment_9_2; }
		
		//FuzzySet
		public RuleCall getFuzzysetFuzzySetParserRuleCall_9_2_0() { return cFuzzysetFuzzySetParserRuleCall_9_2_0; }
		
		//'endfuzzyset'
		public Keyword getEndfuzzysetKeyword_9_3() { return cEndfuzzysetKeyword_9_3; }
		
		//'ruleset'
		public Keyword getRulesetKeyword_10() { return cRulesetKeyword_10; }
		
		//ruleset+=RuleSet
		public Assignment getRulesetAssignment_11() { return cRulesetAssignment_11; }
		
		//RuleSet
		public RuleCall getRulesetRuleSetParserRuleCall_11_0() { return cRulesetRuleSetParserRuleCall_11_0; }
		
		//ruleset+=RuleSet*
		public Assignment getRulesetAssignment_12() { return cRulesetAssignment_12; }
		
		//RuleSet
		public RuleCall getRulesetRuleSetParserRuleCall_12_0() { return cRulesetRuleSetParserRuleCall_12_0; }
		
		//'endruleset'
		public Keyword getEndrulesetKeyword_13() { return cEndrulesetKeyword_13; }
		
		//'actions'
		public Keyword getActionsKeyword_14() { return cActionsKeyword_14; }
		
		//actiondefinition+=Action
		public Assignment getActiondefinitionAssignment_15() { return cActiondefinitionAssignment_15; }
		
		//Action
		public RuleCall getActiondefinitionActionParserRuleCall_15_0() { return cActiondefinitionActionParserRuleCall_15_0; }
		
		//actiondefinition+=Action*
		public Assignment getActiondefinitionAssignment_16() { return cActiondefinitionAssignment_16; }
		
		//Action
		public RuleCall getActiondefinitionActionParserRuleCall_16_0() { return cActiondefinitionActionParserRuleCall_16_0; }
		
		//'endactions'
		public Keyword getEndactionsKeyword_17() { return cEndactionsKeyword_17; }
		
		//('variables' variable+=ConVariable variable+=ConVariable* 'endvariables')?
		public Group getGroup_18() { return cGroup_18; }
		
		//'variables'
		public Keyword getVariablesKeyword_18_0() { return cVariablesKeyword_18_0; }
		
		//variable+=ConVariable
		public Assignment getVariableAssignment_18_1() { return cVariableAssignment_18_1; }
		
		//ConVariable
		public RuleCall getVariableConVariableParserRuleCall_18_1_0() { return cVariableConVariableParserRuleCall_18_1_0; }
		
		//variable+=ConVariable*
		public Assignment getVariableAssignment_18_2() { return cVariableAssignment_18_2; }
		
		//ConVariable
		public RuleCall getVariableConVariableParserRuleCall_18_2_0() { return cVariableConVariableParserRuleCall_18_2_0; }
		
		//'endvariables'
		public Keyword getEndvariablesKeyword_18_3() { return cEndvariablesKeyword_18_3; }
		
		//'transitions'
		public Keyword getTransitionsKeyword_19() { return cTransitionsKeyword_19; }
		
		//transition+=Transition
		public Assignment getTransitionAssignment_20() { return cTransitionAssignment_20; }
		
		//Transition
		public RuleCall getTransitionTransitionParserRuleCall_20_0() { return cTransitionTransitionParserRuleCall_20_0; }
		
		//transition+=Transition*
		public Assignment getTransitionAssignment_21() { return cTransitionAssignment_21; }
		
		//Transition
		public RuleCall getTransitionTransitionParserRuleCall_21_0() { return cTransitionTransitionParserRuleCall_21_0; }
		
		//'endtransitions'
		public Keyword getEndtransitionsKeyword_22() { return cEndtransitionsKeyword_22; }
		
		//'begin'
		public Keyword getBeginKeyword_23() { return cBeginKeyword_23; }
		
		//'startlocation'
		public Keyword getStartlocationKeyword_24() { return cStartlocationKeyword_24; }
		
		//startlocation=[Location|EString]
		public Assignment getStartlocationAssignment_25() { return cStartlocationAssignment_25; }
		
		//[Location|EString]
		public CrossReference getStartlocationLocationCrossReference_25_0() { return cStartlocationLocationCrossReference_25_0; }
		
		//EString
		public RuleCall getStartlocationLocationEStringParserRuleCall_25_0_1() { return cStartlocationLocationEStringParserRuleCall_25_0_1; }
		
		//'errorlocation'
		public Keyword getErrorlocationKeyword_26() { return cErrorlocationKeyword_26; }
		
		//errorlocation=[Location|EString]
		public Assignment getErrorlocationAssignment_27() { return cErrorlocationAssignment_27; }
		
		//[Location|EString]
		public CrossReference getErrorlocationLocationCrossReference_27_0() { return cErrorlocationLocationCrossReference_27_0; }
		
		//EString
		public RuleCall getErrorlocationLocationEStringParserRuleCall_27_0_1() { return cErrorlocationLocationEStringParserRuleCall_27_0_1; }
		
		//'endsystem'
		public Keyword getEndsystemKeyword_28() { return cEndsystemKeyword_28; }
	}
	public class ConVariableElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "hu.sze.aut.fuzzy.hybrid.system.FuzzyDsl.ConVariable");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cContinuousVariableParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cClockParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//ConVariable Variable:
		//	ContinuousVariable | Clock;
		@Override public ParserRule getRule() { return rule; }
		
		//ContinuousVariable | Clock
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//ContinuousVariable
		public RuleCall getContinuousVariableParserRuleCall_0() { return cContinuousVariableParserRuleCall_0; }
		
		//Clock
		public RuleCall getClockParserRuleCall_1() { return cClockParserRuleCall_1; }
	}
	public class ContinuousVariableElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "hu.sze.aut.fuzzy.hybrid.system.FuzzyDsl.ContinuousVariable");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cVariableAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cVariableKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		
		//ContinuousVariable Variable:
		//	{Variable}
		//	'variable' name=EString;
		@Override public ParserRule getRule() { return rule; }
		
		//{Variable} 'variable' name=EString
		public Group getGroup() { return cGroup; }
		
		//{Variable}
		public Action getVariableAction_0() { return cVariableAction_0; }
		
		//'variable'
		public Keyword getVariableKeyword_1() { return cVariableKeyword_1; }
		
		//name=EString
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }
	}
	public class ClockElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "hu.sze.aut.fuzzy.hybrid.system.FuzzyDsl.Clock");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cClockAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cClockKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		
		//Clock:
		//	{Clock}
		//	'clock' name=EString;
		@Override public ParserRule getRule() { return rule; }
		
		//{Clock} 'clock' name=EString
		public Group getGroup() { return cGroup; }
		
		//{Clock}
		public Action getClockAction_0() { return cClockAction_0; }
		
		//'clock'
		public Keyword getClockKeyword_1() { return cClockKeyword_1; }
		
		//name=EString
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }
	}
	public class FuzzySetElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "hu.sze.aut.fuzzy.hybrid.system.FuzzyDsl.FuzzySet");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cFuzzySetAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cFuzzysetsKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Assignment cMembershipfunctionAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cMembershipfunctionMembershipFunctionParserRuleCall_3_0 = (RuleCall)cMembershipfunctionAssignment_3.eContents().get(0);
		private final Assignment cMembershipfunctionAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cMembershipfunctionMembershipFunctionParserRuleCall_4_0 = (RuleCall)cMembershipfunctionAssignment_4.eContents().get(0);
		private final Keyword cEndKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//FuzzySet:
		//	{FuzzySet}
		//	'fuzzysets' name=EString
		//	membershipfunction+=MembershipFunction membershipfunction+=MembershipFunction*
		//	'end';
		@Override public ParserRule getRule() { return rule; }
		
		//{FuzzySet} 'fuzzysets' name=EString membershipfunction+=MembershipFunction membershipfunction+=MembershipFunction* 'end'
		public Group getGroup() { return cGroup; }
		
		//{FuzzySet}
		public Action getFuzzySetAction_0() { return cFuzzySetAction_0; }
		
		//'fuzzysets'
		public Keyword getFuzzysetsKeyword_1() { return cFuzzysetsKeyword_1; }
		
		//name=EString
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }
		
		//membershipfunction+=MembershipFunction
		public Assignment getMembershipfunctionAssignment_3() { return cMembershipfunctionAssignment_3; }
		
		//MembershipFunction
		public RuleCall getMembershipfunctionMembershipFunctionParserRuleCall_3_0() { return cMembershipfunctionMembershipFunctionParserRuleCall_3_0; }
		
		//membershipfunction+=MembershipFunction*
		public Assignment getMembershipfunctionAssignment_4() { return cMembershipfunctionAssignment_4; }
		
		//MembershipFunction
		public RuleCall getMembershipfunctionMembershipFunctionParserRuleCall_4_0() { return cMembershipfunctionMembershipFunctionParserRuleCall_4_0; }
		
		//'end'
		public Keyword getEndKeyword_5() { return cEndKeyword_5; }
	}
	public class MembershipFunctionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "hu.sze.aut.fuzzy.hybrid.system.FuzzyDsl.MembershipFunction");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cLambdaParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cTrapezoidParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cAlphaParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		
		//MembershipFunction:
		//	Lambda | Trapezoid | Alpha;
		@Override public ParserRule getRule() { return rule; }
		
		//Lambda | Trapezoid | Alpha
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//Lambda
		public RuleCall getLambdaParserRuleCall_0() { return cLambdaParserRuleCall_0; }
		
		//Trapezoid
		public RuleCall getTrapezoidParserRuleCall_1() { return cTrapezoidParserRuleCall_1; }
		
		//Alpha
		public RuleCall getAlphaParserRuleCall_2() { return cAlphaParserRuleCall_2; }
	}
	public class AlphaElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "hu.sze.aut.fuzzy.hybrid.system.FuzzyDsl.Alpha");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cAlphaAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cAlphaKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cOnKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cVariableAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final CrossReference cVariableVariableCrossReference_4_0 = (CrossReference)cVariableAssignment_4.eContents().get(0);
		private final RuleCall cVariableVariableEStringParserRuleCall_4_0_1 = (RuleCall)cVariableVariableCrossReference_4_0.eContents().get(1);
		private final Keyword cLeftParenthesisKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cAAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cADOUBLETerminalRuleCall_6_0 = (RuleCall)cAAssignment_6.eContents().get(0);
		private final Keyword cCommaKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Assignment cBAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cBDOUBLETerminalRuleCall_8_0 = (RuleCall)cBAssignment_8.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_9 = (Keyword)cGroup.eContents().get(9);
		
		//Alpha:
		//	{Alpha}
		//	'alpha' name=EString 'on' variable=[Variable|EString] '(' a=DOUBLE ',' b=DOUBLE ')';
		@Override public ParserRule getRule() { return rule; }
		
		//{Alpha} 'alpha' name=EString 'on' variable=[Variable|EString] '(' a=DOUBLE ',' b=DOUBLE ')'
		public Group getGroup() { return cGroup; }
		
		//{Alpha}
		public Action getAlphaAction_0() { return cAlphaAction_0; }
		
		//'alpha'
		public Keyword getAlphaKeyword_1() { return cAlphaKeyword_1; }
		
		//name=EString
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }
		
		//'on'
		public Keyword getOnKeyword_3() { return cOnKeyword_3; }
		
		//variable=[Variable|EString]
		public Assignment getVariableAssignment_4() { return cVariableAssignment_4; }
		
		//[Variable|EString]
		public CrossReference getVariableVariableCrossReference_4_0() { return cVariableVariableCrossReference_4_0; }
		
		//EString
		public RuleCall getVariableVariableEStringParserRuleCall_4_0_1() { return cVariableVariableEStringParserRuleCall_4_0_1; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_5() { return cLeftParenthesisKeyword_5; }
		
		//a=DOUBLE
		public Assignment getAAssignment_6() { return cAAssignment_6; }
		
		//DOUBLE
		public RuleCall getADOUBLETerminalRuleCall_6_0() { return cADOUBLETerminalRuleCall_6_0; }
		
		//','
		public Keyword getCommaKeyword_7() { return cCommaKeyword_7; }
		
		//b=DOUBLE
		public Assignment getBAssignment_8() { return cBAssignment_8; }
		
		//DOUBLE
		public RuleCall getBDOUBLETerminalRuleCall_8_0() { return cBDOUBLETerminalRuleCall_8_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_9() { return cRightParenthesisKeyword_9; }
	}
	public class LambdaElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "hu.sze.aut.fuzzy.hybrid.system.FuzzyDsl.Lambda");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cLambdaAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cLambdaKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cOnKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cVariableAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final CrossReference cVariableVariableCrossReference_4_0 = (CrossReference)cVariableAssignment_4.eContents().get(0);
		private final RuleCall cVariableVariableEStringParserRuleCall_4_0_1 = (RuleCall)cVariableVariableCrossReference_4_0.eContents().get(1);
		private final Keyword cLeftParenthesisKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cAAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cADOUBLETerminalRuleCall_6_0 = (RuleCall)cAAssignment_6.eContents().get(0);
		private final Keyword cCommaKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Assignment cUAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cUDOUBLETerminalRuleCall_8_0 = (RuleCall)cUAssignment_8.eContents().get(0);
		private final Keyword cCommaKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Assignment cBAssignment_10 = (Assignment)cGroup.eContents().get(10);
		private final RuleCall cBDOUBLETerminalRuleCall_10_0 = (RuleCall)cBAssignment_10.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_11 = (Keyword)cGroup.eContents().get(11);
		
		//Lambda:
		//	{Lambda}
		//	'lambda' name=EString 'on' variable=[Variable|EString] '(' a=DOUBLE ',' u=DOUBLE ',' b=DOUBLE ')';
		@Override public ParserRule getRule() { return rule; }
		
		//{Lambda} 'lambda' name=EString 'on' variable=[Variable|EString] '(' a=DOUBLE ',' u=DOUBLE ',' b=DOUBLE ')'
		public Group getGroup() { return cGroup; }
		
		//{Lambda}
		public Action getLambdaAction_0() { return cLambdaAction_0; }
		
		//'lambda'
		public Keyword getLambdaKeyword_1() { return cLambdaKeyword_1; }
		
		//name=EString
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }
		
		//'on'
		public Keyword getOnKeyword_3() { return cOnKeyword_3; }
		
		//variable=[Variable|EString]
		public Assignment getVariableAssignment_4() { return cVariableAssignment_4; }
		
		//[Variable|EString]
		public CrossReference getVariableVariableCrossReference_4_0() { return cVariableVariableCrossReference_4_0; }
		
		//EString
		public RuleCall getVariableVariableEStringParserRuleCall_4_0_1() { return cVariableVariableEStringParserRuleCall_4_0_1; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_5() { return cLeftParenthesisKeyword_5; }
		
		//a=DOUBLE
		public Assignment getAAssignment_6() { return cAAssignment_6; }
		
		//DOUBLE
		public RuleCall getADOUBLETerminalRuleCall_6_0() { return cADOUBLETerminalRuleCall_6_0; }
		
		//','
		public Keyword getCommaKeyword_7() { return cCommaKeyword_7; }
		
		//u=DOUBLE
		public Assignment getUAssignment_8() { return cUAssignment_8; }
		
		//DOUBLE
		public RuleCall getUDOUBLETerminalRuleCall_8_0() { return cUDOUBLETerminalRuleCall_8_0; }
		
		//','
		public Keyword getCommaKeyword_9() { return cCommaKeyword_9; }
		
		//b=DOUBLE
		public Assignment getBAssignment_10() { return cBAssignment_10; }
		
		//DOUBLE
		public RuleCall getBDOUBLETerminalRuleCall_10_0() { return cBDOUBLETerminalRuleCall_10_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_11() { return cRightParenthesisKeyword_11; }
	}
	public class TrapezoidElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "hu.sze.aut.fuzzy.hybrid.system.FuzzyDsl.Trapezoid");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cTrapezoidAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cTrapezoidKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cOnKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cVariableAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final CrossReference cVariableVariableCrossReference_4_0 = (CrossReference)cVariableAssignment_4.eContents().get(0);
		private final RuleCall cVariableVariableEStringParserRuleCall_4_0_1 = (RuleCall)cVariableVariableCrossReference_4_0.eContents().get(1);
		private final Keyword cLeftParenthesisKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cAAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cADOUBLETerminalRuleCall_6_0 = (RuleCall)cAAssignment_6.eContents().get(0);
		private final Keyword cCommaKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Assignment cBAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cBDOUBLETerminalRuleCall_8_0 = (RuleCall)cBAssignment_8.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_9 = (Keyword)cGroup.eContents().get(9);
		
		//Trapezoid:
		//	{Trapezoid}
		//	'trapezoid' name=EString 'on' variable=[Variable|EString] '(' a=DOUBLE ',' b=DOUBLE ')';
		@Override public ParserRule getRule() { return rule; }
		
		//{Trapezoid} 'trapezoid' name=EString 'on' variable=[Variable|EString] '(' a=DOUBLE ',' b=DOUBLE ')'
		public Group getGroup() { return cGroup; }
		
		//{Trapezoid}
		public Action getTrapezoidAction_0() { return cTrapezoidAction_0; }
		
		//'trapezoid'
		public Keyword getTrapezoidKeyword_1() { return cTrapezoidKeyword_1; }
		
		//name=EString
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }
		
		//'on'
		public Keyword getOnKeyword_3() { return cOnKeyword_3; }
		
		//variable=[Variable|EString]
		public Assignment getVariableAssignment_4() { return cVariableAssignment_4; }
		
		//[Variable|EString]
		public CrossReference getVariableVariableCrossReference_4_0() { return cVariableVariableCrossReference_4_0; }
		
		//EString
		public RuleCall getVariableVariableEStringParserRuleCall_4_0_1() { return cVariableVariableEStringParserRuleCall_4_0_1; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_5() { return cLeftParenthesisKeyword_5; }
		
		//a=DOUBLE
		public Assignment getAAssignment_6() { return cAAssignment_6; }
		
		//DOUBLE
		public RuleCall getADOUBLETerminalRuleCall_6_0() { return cADOUBLETerminalRuleCall_6_0; }
		
		//','
		public Keyword getCommaKeyword_7() { return cCommaKeyword_7; }
		
		//b=DOUBLE
		public Assignment getBAssignment_8() { return cBAssignment_8; }
		
		//DOUBLE
		public RuleCall getBDOUBLETerminalRuleCall_8_0() { return cBDOUBLETerminalRuleCall_8_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_9() { return cRightParenthesisKeyword_9; }
	}
	public class RuleSetElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "hu.sze.aut.fuzzy.hybrid.system.FuzzyDsl.RuleSet");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cDiscreteEventRulesetParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cContinuousEventRuleSetParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//RuleSet:
		//	DiscreteEventRuleset | ContinuousEventRuleSet;
		@Override public ParserRule getRule() { return rule; }
		
		//DiscreteEventRuleset | ContinuousEventRuleSet
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//DiscreteEventRuleset
		public RuleCall getDiscreteEventRulesetParserRuleCall_0() { return cDiscreteEventRulesetParserRuleCall_0; }
		
		//ContinuousEventRuleSet
		public RuleCall getContinuousEventRuleSetParserRuleCall_1() { return cContinuousEventRuleSetParserRuleCall_1; }
	}
	public class DiscreteEventRulesetElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "hu.sze.aut.fuzzy.hybrid.system.FuzzyDsl.DiscreteEventRuleset");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cDiscreteEventRulesetAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cDiscreteeventrulesetKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cDiscreteeventsKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cDiscreteeventAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cDiscreteeventDiscreteEventParserRuleCall_3_1_0 = (RuleCall)cDiscreteeventAssignment_3_1.eContents().get(0);
		private final Group cGroup_3_2 = (Group)cGroup_3.eContents().get(2);
		private final Keyword cCommaKeyword_3_2_0 = (Keyword)cGroup_3_2.eContents().get(0);
		private final Assignment cDiscreteeventAssignment_3_2_1 = (Assignment)cGroup_3_2.eContents().get(1);
		private final RuleCall cDiscreteeventDiscreteEventParserRuleCall_3_2_1_0 = (RuleCall)cDiscreteeventAssignment_3_2_1.eContents().get(0);
		private final Keyword cEndeventsKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Keyword cEndrulesetKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//DiscreteEventRuleset:
		//	{DiscreteEventRuleset}
		//	'discreteeventruleset' name=EString ('discreteevents'
		//	discreteevent+=DiscreteEvent (',' discreteevent+=DiscreteEvent)*)?
		//	'endevents'
		//	'endruleset';
		@Override public ParserRule getRule() { return rule; }
		
		//{DiscreteEventRuleset} 'discreteeventruleset' name=EString ('discreteevents' discreteevent+=DiscreteEvent (','
		//discreteevent+=DiscreteEvent)*)? 'endevents' 'endruleset'
		public Group getGroup() { return cGroup; }
		
		//{DiscreteEventRuleset}
		public Action getDiscreteEventRulesetAction_0() { return cDiscreteEventRulesetAction_0; }
		
		//'discreteeventruleset'
		public Keyword getDiscreteeventrulesetKeyword_1() { return cDiscreteeventrulesetKeyword_1; }
		
		//name=EString
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }
		
		//('discreteevents' discreteevent+=DiscreteEvent (',' discreteevent+=DiscreteEvent)*)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'discreteevents'
		public Keyword getDiscreteeventsKeyword_3_0() { return cDiscreteeventsKeyword_3_0; }
		
		//discreteevent+=DiscreteEvent
		public Assignment getDiscreteeventAssignment_3_1() { return cDiscreteeventAssignment_3_1; }
		
		//DiscreteEvent
		public RuleCall getDiscreteeventDiscreteEventParserRuleCall_3_1_0() { return cDiscreteeventDiscreteEventParserRuleCall_3_1_0; }
		
		//(',' discreteevent+=DiscreteEvent)*
		public Group getGroup_3_2() { return cGroup_3_2; }
		
		//','
		public Keyword getCommaKeyword_3_2_0() { return cCommaKeyword_3_2_0; }
		
		//discreteevent+=DiscreteEvent
		public Assignment getDiscreteeventAssignment_3_2_1() { return cDiscreteeventAssignment_3_2_1; }
		
		//DiscreteEvent
		public RuleCall getDiscreteeventDiscreteEventParserRuleCall_3_2_1_0() { return cDiscreteeventDiscreteEventParserRuleCall_3_2_1_0; }
		
		//'endevents'
		public Keyword getEndeventsKeyword_4() { return cEndeventsKeyword_4; }
		
		//'endruleset'
		public Keyword getEndrulesetKeyword_5() { return cEndrulesetKeyword_5; }
	}
	public class ContinuousEventRuleSetElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "hu.sze.aut.fuzzy.hybrid.system.FuzzyDsl.ContinuousEventRuleSet");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cContinuousEventRulesetAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cContinouseventrulesetKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cRulesKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cRuleAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cRuleRuleParserRuleCall_4_0 = (RuleCall)cRuleAssignment_4.eContents().get(0);
		private final Assignment cRuleAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cRuleRuleParserRuleCall_5_0 = (RuleCall)cRuleAssignment_5.eContents().get(0);
		private final Keyword cEndrulesKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Keyword cEndrulesetKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//ContinuousEventRuleSet ContinuousEventRuleset:
		//	{ContinuousEventRuleset}
		//	'continouseventruleset' name=EString
		//	'rules'
		//	rule+=Rule rule+=Rule*
		//	'endrules'
		//	'endruleset';
		@Override public ParserRule getRule() { return rule; }
		
		//{ContinuousEventRuleset} 'continouseventruleset' name=EString 'rules' rule+=Rule rule+=Rule* 'endrules' 'endruleset'
		public Group getGroup() { return cGroup; }
		
		//{ContinuousEventRuleset}
		public Action getContinuousEventRulesetAction_0() { return cContinuousEventRulesetAction_0; }
		
		//'continouseventruleset'
		public Keyword getContinouseventrulesetKeyword_1() { return cContinouseventrulesetKeyword_1; }
		
		//name=EString
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }
		
		//'rules'
		public Keyword getRulesKeyword_3() { return cRulesKeyword_3; }
		
		//rule+=Rule
		public Assignment getRuleAssignment_4() { return cRuleAssignment_4; }
		
		//Rule
		public RuleCall getRuleRuleParserRuleCall_4_0() { return cRuleRuleParserRuleCall_4_0; }
		
		//rule+=Rule*
		public Assignment getRuleAssignment_5() { return cRuleAssignment_5; }
		
		//Rule
		public RuleCall getRuleRuleParserRuleCall_5_0() { return cRuleRuleParserRuleCall_5_0; }
		
		//'endrules'
		public Keyword getEndrulesKeyword_6() { return cEndrulesKeyword_6; }
		
		//'endruleset'
		public Keyword getEndrulesetKeyword_7() { return cEndrulesetKeyword_7; }
	}
	public class DiscreteEventElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "hu.sze.aut.fuzzy.hybrid.system.FuzzyDsl.DiscreteEvent");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cDiscreteEventAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cDiscreteeventKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		
		//DiscreteEvent:
		//	{DiscreteEvent}
		//	'discreteevent' name=EString;
		@Override public ParserRule getRule() { return rule; }
		
		//{DiscreteEvent} 'discreteevent' name=EString
		public Group getGroup() { return cGroup; }
		
		//{DiscreteEvent}
		public Action getDiscreteEventAction_0() { return cDiscreteEventAction_0; }
		
		//'discreteevent'
		public Keyword getDiscreteeventKeyword_1() { return cDiscreteeventKeyword_1; }
		
		//name=EString
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }
	}
	public class RuleElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "hu.sze.aut.fuzzy.hybrid.system.FuzzyDsl.Rule");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cFuzzyRuleParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cCrispGuardParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//Rule:
		//	FuzzyRule | CrispGuard;
		@Override public ParserRule getRule() { return rule; }
		
		//FuzzyRule | CrispGuard
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//FuzzyRule
		public RuleCall getFuzzyRuleParserRuleCall_0() { return cFuzzyRuleParserRuleCall_0; }
		
		//CrispGuard
		public RuleCall getCrispGuardParserRuleCall_1() { return cCrispGuardParserRuleCall_1; }
	}
	public class CrispGuardElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "hu.sze.aut.fuzzy.hybrid.system.FuzzyDsl.CrispGuard");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cCrispGuardAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cCrispruleKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cColonEqualsSignKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cRelationexpressionAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cRelationexpressionRelationExpressionParserRuleCall_4_0 = (RuleCall)cRelationexpressionAssignment_4.eContents().get(0);
		
		//CrispGuard:
		//	{CrispGuard}
		//	'crisprule' name=EString ':=' relationexpression=RelationExpression;
		@Override public ParserRule getRule() { return rule; }
		
		//{CrispGuard} 'crisprule' name=EString ':=' relationexpression=RelationExpression
		public Group getGroup() { return cGroup; }
		
		//{CrispGuard}
		public Action getCrispGuardAction_0() { return cCrispGuardAction_0; }
		
		//'crisprule'
		public Keyword getCrispruleKeyword_1() { return cCrispruleKeyword_1; }
		
		//name=EString
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }
		
		//':='
		public Keyword getColonEqualsSignKeyword_3() { return cColonEqualsSignKeyword_3; }
		
		//relationexpression=RelationExpression
		public Assignment getRelationexpressionAssignment_4() { return cRelationexpressionAssignment_4; }
		
		//RelationExpression
		public RuleCall getRelationexpressionRelationExpressionParserRuleCall_4_0() { return cRelationexpressionRelationExpressionParserRuleCall_4_0; }
	}
	public class RelationExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "hu.sze.aut.fuzzy.hybrid.system.FuzzyDsl.RelationExpression");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cGreaterExpressionParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cLessExpressionParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//RelationExpression:
		//	GreaterExpression | LessExpression;
		@Override public ParserRule getRule() { return rule; }
		
		//GreaterExpression | LessExpression
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//GreaterExpression
		public RuleCall getGreaterExpressionParserRuleCall_0() { return cGreaterExpressionParserRuleCall_0; }
		
		//LessExpression
		public RuleCall getLessExpressionParserRuleCall_1() { return cLessExpressionParserRuleCall_1; }
	}
	public class GreaterExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "hu.sze.aut.fuzzy.hybrid.system.FuzzyDsl.GreaterExpression");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cGreaterExpressionAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cVariableAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cVariableVariableCrossReference_1_0 = (CrossReference)cVariableAssignment_1.eContents().get(0);
		private final RuleCall cVariableVariableEStringParserRuleCall_1_0_1 = (RuleCall)cVariableVariableCrossReference_1_0.eContents().get(1);
		private final Keyword cGreaterThanSignKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cCAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cCDOUBLETerminalRuleCall_3_0 = (RuleCall)cCAssignment_3.eContents().get(0);
		
		//GreaterExpression:
		//	{GreaterExpression} variable=[Variable|EString] '>' c=DOUBLE;
		@Override public ParserRule getRule() { return rule; }
		
		//{GreaterExpression} variable=[Variable|EString] '>' c=DOUBLE
		public Group getGroup() { return cGroup; }
		
		//{GreaterExpression}
		public Action getGreaterExpressionAction_0() { return cGreaterExpressionAction_0; }
		
		//variable=[Variable|EString]
		public Assignment getVariableAssignment_1() { return cVariableAssignment_1; }
		
		//[Variable|EString]
		public CrossReference getVariableVariableCrossReference_1_0() { return cVariableVariableCrossReference_1_0; }
		
		//EString
		public RuleCall getVariableVariableEStringParserRuleCall_1_0_1() { return cVariableVariableEStringParserRuleCall_1_0_1; }
		
		//'>'
		public Keyword getGreaterThanSignKeyword_2() { return cGreaterThanSignKeyword_2; }
		
		//c=DOUBLE
		public Assignment getCAssignment_3() { return cCAssignment_3; }
		
		//DOUBLE
		public RuleCall getCDOUBLETerminalRuleCall_3_0() { return cCDOUBLETerminalRuleCall_3_0; }
	}
	public class LessExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "hu.sze.aut.fuzzy.hybrid.system.FuzzyDsl.LessExpression");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cLessExpressionAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cVariableAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cVariableVariableCrossReference_1_0 = (CrossReference)cVariableAssignment_1.eContents().get(0);
		private final RuleCall cVariableVariableEStringParserRuleCall_1_0_1 = (RuleCall)cVariableVariableCrossReference_1_0.eContents().get(1);
		private final Keyword cLessThanSignKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cCAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cCDOUBLETerminalRuleCall_3_0 = (RuleCall)cCAssignment_3.eContents().get(0);
		
		//LessExpression:
		//	{LessExpression} variable=[Variable|EString] '<' c=DOUBLE;
		@Override public ParserRule getRule() { return rule; }
		
		//{LessExpression} variable=[Variable|EString] '<' c=DOUBLE
		public Group getGroup() { return cGroup; }
		
		//{LessExpression}
		public Action getLessExpressionAction_0() { return cLessExpressionAction_0; }
		
		//variable=[Variable|EString]
		public Assignment getVariableAssignment_1() { return cVariableAssignment_1; }
		
		//[Variable|EString]
		public CrossReference getVariableVariableCrossReference_1_0() { return cVariableVariableCrossReference_1_0; }
		
		//EString
		public RuleCall getVariableVariableEStringParserRuleCall_1_0_1() { return cVariableVariableEStringParserRuleCall_1_0_1; }
		
		//'<'
		public Keyword getLessThanSignKeyword_2() { return cLessThanSignKeyword_2; }
		
		//c=DOUBLE
		public Assignment getCAssignment_3() { return cCAssignment_3; }
		
		//DOUBLE
		public RuleCall getCDOUBLETerminalRuleCall_3_0() { return cCDOUBLETerminalRuleCall_3_0; }
	}
	public class FuzzyRuleElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "hu.sze.aut.fuzzy.hybrid.system.FuzzyDsl.FuzzyRule");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cFuzzyRuleAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cFuzzyruleKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cEndKeyword_2 = (Keyword)cGroup.eContents().get(2);
		
		//FuzzyRule:
		//	{FuzzyRule}
		//	'fuzzyrule'
		//	'end';
		@Override public ParserRule getRule() { return rule; }
		
		//{FuzzyRule} 'fuzzyrule' 'end'
		public Group getGroup() { return cGroup; }
		
		//{FuzzyRule}
		public Action getFuzzyRuleAction_0() { return cFuzzyRuleAction_0; }
		
		//'fuzzyrule'
		public Keyword getFuzzyruleKeyword_1() { return cFuzzyruleKeyword_1; }
		
		//'end'
		public Keyword getEndKeyword_2() { return cEndKeyword_2; }
	}
	public class LocationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "hu.sze.aut.fuzzy.hybrid.system.FuzzyDsl.Location");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cLocationAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cLocationKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cDoKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cCyclicactionAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final CrossReference cCyclicactionActionDefinitionCrossReference_3_1_0 = (CrossReference)cCyclicactionAssignment_3_1.eContents().get(0);
		private final RuleCall cCyclicactionActionDefinitionEStringParserRuleCall_3_1_0_1 = (RuleCall)cCyclicactionActionDefinitionCrossReference_3_1_0.eContents().get(1);
		private final Keyword cEndKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//Location:
		//	{Location}
		//	'location' name=EString ('do' cyclicaction=[ActionDefinition|EString])?
		//	'end';
		@Override public ParserRule getRule() { return rule; }
		
		//{Location} 'location' name=EString ('do' cyclicaction=[ActionDefinition|EString])? 'end'
		public Group getGroup() { return cGroup; }
		
		//{Location}
		public Action getLocationAction_0() { return cLocationAction_0; }
		
		//'location'
		public Keyword getLocationKeyword_1() { return cLocationKeyword_1; }
		
		//name=EString
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }
		
		//('do' cyclicaction=[ActionDefinition|EString])?
		public Group getGroup_3() { return cGroup_3; }
		
		//'do'
		public Keyword getDoKeyword_3_0() { return cDoKeyword_3_0; }
		
		//cyclicaction=[ActionDefinition|EString]
		public Assignment getCyclicactionAssignment_3_1() { return cCyclicactionAssignment_3_1; }
		
		//[ActionDefinition|EString]
		public CrossReference getCyclicactionActionDefinitionCrossReference_3_1_0() { return cCyclicactionActionDefinitionCrossReference_3_1_0; }
		
		//EString
		public RuleCall getCyclicactionActionDefinitionEStringParserRuleCall_3_1_0_1() { return cCyclicactionActionDefinitionEStringParserRuleCall_3_1_0_1; }
		
		//'end'
		public Keyword getEndKeyword_4() { return cEndKeyword_4; }
	}
	public class TransitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "hu.sze.aut.fuzzy.hybrid.system.FuzzyDsl.Transition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cTransitionAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cTransitionKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cColonKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cSourceAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final CrossReference cSourceLocationCrossReference_4_0 = (CrossReference)cSourceAssignment_4.eContents().get(0);
		private final RuleCall cSourceLocationEStringParserRuleCall_4_0_1 = (RuleCall)cSourceLocationCrossReference_4_0.eContents().get(1);
		private final Keyword cHyphenMinusGreaterThanSignKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cTargetAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final CrossReference cTargetLocationCrossReference_6_0 = (CrossReference)cTargetAssignment_6.eContents().get(0);
		private final RuleCall cTargetLocationEStringParserRuleCall_6_0_1 = (RuleCall)cTargetLocationCrossReference_6_0.eContents().get(1);
		private final Keyword cTriggerKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Assignment cTriggerAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final CrossReference cTriggerDiscreteEventCrossReference_8_0 = (CrossReference)cTriggerAssignment_8.eContents().get(0);
		private final RuleCall cTriggerDiscreteEventEStringParserRuleCall_8_0_1 = (RuleCall)cTriggerDiscreteEventCrossReference_8_0.eContents().get(1);
		private final Group cGroup_9 = (Group)cGroup.eContents().get(9);
		private final Keyword cActionKeyword_9_0 = (Keyword)cGroup_9.eContents().get(0);
		private final Assignment cActiondefinitionAssignment_9_1 = (Assignment)cGroup_9.eContents().get(1);
		private final CrossReference cActiondefinitionActionDefinitionCrossReference_9_1_0 = (CrossReference)cActiondefinitionAssignment_9_1.eContents().get(0);
		private final RuleCall cActiondefinitionActionDefinitionEStringParserRuleCall_9_1_0_1 = (RuleCall)cActiondefinitionActionDefinitionCrossReference_9_1_0.eContents().get(1);
		private final Group cGroup_10 = (Group)cGroup.eContents().get(10);
		private final Keyword cInvariantKeyword_10_0 = (Keyword)cGroup_10.eContents().get(0);
		private final Assignment cInvariantAssignment_10_1 = (Assignment)cGroup_10.eContents().get(1);
		private final CrossReference cInvariantRuleCrossReference_10_1_0 = (CrossReference)cInvariantAssignment_10_1.eContents().get(0);
		private final RuleCall cInvariantRuleEStringParserRuleCall_10_1_0_1 = (RuleCall)cInvariantRuleCrossReference_10_1_0.eContents().get(1);
		
		//Transition:
		//	{Transition}
		//	'transition' name=EString ':' source=[Location|EString] '->' target=[Location|EString] 'trigger'
		//	trigger=[DiscreteEvent|EString] ('action' actiondefinition=[ActionDefinition|EString])? ('invariant'
		//	invariant=[Rule|EString])?;
		@Override public ParserRule getRule() { return rule; }
		
		//{Transition} 'transition' name=EString ':' source=[Location|EString] '->' target=[Location|EString] 'trigger'
		//trigger=[DiscreteEvent|EString] ('action' actiondefinition=[ActionDefinition|EString])? ('invariant'
		//invariant=[Rule|EString])?
		public Group getGroup() { return cGroup; }
		
		//{Transition}
		public Action getTransitionAction_0() { return cTransitionAction_0; }
		
		//'transition'
		public Keyword getTransitionKeyword_1() { return cTransitionKeyword_1; }
		
		//name=EString
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }
		
		//':'
		public Keyword getColonKeyword_3() { return cColonKeyword_3; }
		
		//source=[Location|EString]
		public Assignment getSourceAssignment_4() { return cSourceAssignment_4; }
		
		//[Location|EString]
		public CrossReference getSourceLocationCrossReference_4_0() { return cSourceLocationCrossReference_4_0; }
		
		//EString
		public RuleCall getSourceLocationEStringParserRuleCall_4_0_1() { return cSourceLocationEStringParserRuleCall_4_0_1; }
		
		//'->'
		public Keyword getHyphenMinusGreaterThanSignKeyword_5() { return cHyphenMinusGreaterThanSignKeyword_5; }
		
		//target=[Location|EString]
		public Assignment getTargetAssignment_6() { return cTargetAssignment_6; }
		
		//[Location|EString]
		public CrossReference getTargetLocationCrossReference_6_0() { return cTargetLocationCrossReference_6_0; }
		
		//EString
		public RuleCall getTargetLocationEStringParserRuleCall_6_0_1() { return cTargetLocationEStringParserRuleCall_6_0_1; }
		
		//'trigger'
		public Keyword getTriggerKeyword_7() { return cTriggerKeyword_7; }
		
		//trigger=[DiscreteEvent|EString]
		public Assignment getTriggerAssignment_8() { return cTriggerAssignment_8; }
		
		//[DiscreteEvent|EString]
		public CrossReference getTriggerDiscreteEventCrossReference_8_0() { return cTriggerDiscreteEventCrossReference_8_0; }
		
		//EString
		public RuleCall getTriggerDiscreteEventEStringParserRuleCall_8_0_1() { return cTriggerDiscreteEventEStringParserRuleCall_8_0_1; }
		
		//('action' actiondefinition=[ActionDefinition|EString])?
		public Group getGroup_9() { return cGroup_9; }
		
		//'action'
		public Keyword getActionKeyword_9_0() { return cActionKeyword_9_0; }
		
		//actiondefinition=[ActionDefinition|EString]
		public Assignment getActiondefinitionAssignment_9_1() { return cActiondefinitionAssignment_9_1; }
		
		//[ActionDefinition|EString]
		public CrossReference getActiondefinitionActionDefinitionCrossReference_9_1_0() { return cActiondefinitionActionDefinitionCrossReference_9_1_0; }
		
		//EString
		public RuleCall getActiondefinitionActionDefinitionEStringParserRuleCall_9_1_0_1() { return cActiondefinitionActionDefinitionEStringParserRuleCall_9_1_0_1; }
		
		//('invariant' invariant=[Rule|EString])?
		public Group getGroup_10() { return cGroup_10; }
		
		//'invariant'
		public Keyword getInvariantKeyword_10_0() { return cInvariantKeyword_10_0; }
		
		//invariant=[Rule|EString]
		public Assignment getInvariantAssignment_10_1() { return cInvariantAssignment_10_1; }
		
		//[Rule|EString]
		public CrossReference getInvariantRuleCrossReference_10_1_0() { return cInvariantRuleCrossReference_10_1_0; }
		
		//EString
		public RuleCall getInvariantRuleEStringParserRuleCall_10_1_0_1() { return cInvariantRuleEStringParserRuleCall_10_1_0_1; }
	}
	public class ActionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "hu.sze.aut.fuzzy.hybrid.system.FuzzyDsl.Action");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cActionDefinitionAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cActionKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cNameKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cNameEStringParserRuleCall_3_0 = (RuleCall)cNameAssignment_3.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cResetKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cResetAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final CrossReference cResetClockCrossReference_4_1_0 = (CrossReference)cResetAssignment_4_1.eContents().get(0);
		private final RuleCall cResetClockEStringParserRuleCall_4_1_0_1 = (RuleCall)cResetClockCrossReference_4_1_0.eContents().get(1);
		
		//Action ActionDefinition:
		//	{ActionDefinition}
		//	'action'
		//	'name' name=EString ('reset' reset=[Clock|EString])?;
		@Override public ParserRule getRule() { return rule; }
		
		//{ActionDefinition} 'action' 'name' name=EString ('reset' reset=[Clock|EString])?
		public Group getGroup() { return cGroup; }
		
		//{ActionDefinition}
		public Action getActionDefinitionAction_0() { return cActionDefinitionAction_0; }
		
		//'action'
		public Keyword getActionKeyword_1() { return cActionKeyword_1; }
		
		//'name'
		public Keyword getNameKeyword_2() { return cNameKeyword_2; }
		
		//name=EString
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_3_0() { return cNameEStringParserRuleCall_3_0; }
		
		//('reset' reset=[Clock|EString])?
		public Group getGroup_4() { return cGroup_4; }
		
		//'reset'
		public Keyword getResetKeyword_4_0() { return cResetKeyword_4_0; }
		
		//reset=[Clock|EString]
		public Assignment getResetAssignment_4_1() { return cResetAssignment_4_1; }
		
		//[Clock|EString]
		public CrossReference getResetClockCrossReference_4_1_0() { return cResetClockCrossReference_4_1_0; }
		
		//EString
		public RuleCall getResetClockEStringParserRuleCall_4_1_0_1() { return cResetClockEStringParserRuleCall_4_1_0_1; }
	}
	public class EStringElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "hu.sze.aut.fuzzy.hybrid.system.FuzzyDsl.EString");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cSTRINGTerminalRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//EString:
		//	STRING | ID;
		@Override public ParserRule getRule() { return rule; }
		
		//STRING | ID
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//STRING
		public RuleCall getSTRINGTerminalRuleCall_0() { return cSTRINGTerminalRuleCall_0; }
		
		//ID
		public RuleCall getIDTerminalRuleCall_1() { return cIDTerminalRuleCall_1; }
	}
	
	
	private final HybridSystemElements pHybridSystem;
	private final SimpleSystemElements pSimpleSystem;
	private final ConVariableElements pConVariable;
	private final ContinuousVariableElements pContinuousVariable;
	private final ClockElements pClock;
	private final FuzzySetElements pFuzzySet;
	private final MembershipFunctionElements pMembershipFunction;
	private final AlphaElements pAlpha;
	private final LambdaElements pLambda;
	private final TrapezoidElements pTrapezoid;
	private final RuleSetElements pRuleSet;
	private final DiscreteEventRulesetElements pDiscreteEventRuleset;
	private final ContinuousEventRuleSetElements pContinuousEventRuleSet;
	private final DiscreteEventElements pDiscreteEvent;
	private final RuleElements pRule;
	private final CrispGuardElements pCrispGuard;
	private final RelationExpressionElements pRelationExpression;
	private final GreaterExpressionElements pGreaterExpression;
	private final LessExpressionElements pLessExpression;
	private final FuzzyRuleElements pFuzzyRule;
	private final LocationElements pLocation;
	private final TransitionElements pTransition;
	private final ActionElements pAction;
	private final TerminalRule tDOUBLE;
	private final EStringElements pEString;
	
	private final Grammar grammar;
	
	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public FuzzyDslGrammarAccess(GrammarProvider grammarProvider,
			TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pHybridSystem = new HybridSystemElements();
		this.pSimpleSystem = new SimpleSystemElements();
		this.pConVariable = new ConVariableElements();
		this.pContinuousVariable = new ContinuousVariableElements();
		this.pClock = new ClockElements();
		this.pFuzzySet = new FuzzySetElements();
		this.pMembershipFunction = new MembershipFunctionElements();
		this.pAlpha = new AlphaElements();
		this.pLambda = new LambdaElements();
		this.pTrapezoid = new TrapezoidElements();
		this.pRuleSet = new RuleSetElements();
		this.pDiscreteEventRuleset = new DiscreteEventRulesetElements();
		this.pContinuousEventRuleSet = new ContinuousEventRuleSetElements();
		this.pDiscreteEvent = new DiscreteEventElements();
		this.pRule = new RuleElements();
		this.pCrispGuard = new CrispGuardElements();
		this.pRelationExpression = new RelationExpressionElements();
		this.pGreaterExpression = new GreaterExpressionElements();
		this.pLessExpression = new LessExpressionElements();
		this.pFuzzyRule = new FuzzyRuleElements();
		this.pLocation = new LocationElements();
		this.pTransition = new TransitionElements();
		this.pAction = new ActionElements();
		this.tDOUBLE = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "hu.sze.aut.fuzzy.hybrid.system.FuzzyDsl.DOUBLE");
		this.pEString = new EStringElements();
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("hu.sze.aut.fuzzy.hybrid.system.FuzzyDsl".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//HybridSystem System:
	//	SimpleSystem;
	public HybridSystemElements getHybridSystemAccess() {
		return pHybridSystem;
	}
	
	public ParserRule getHybridSystemRule() {
		return getHybridSystemAccess().getRule();
	}
	
	//SimpleSystem System:
	//	{System}
	//	'hybridsystem' name=EString (',' 'rate' ':' rate=DOUBLE)?
	//	'locations' ':'
	//	location+=Location location+=Location*
	//	'end' ('fuzzysetcollection'
	//	fuzzyset+=FuzzySet fuzzyset+=FuzzySet*
	//	'endfuzzyset')?
	//	'ruleset'
	//	ruleset+=RuleSet ruleset+=RuleSet*
	//	'endruleset'
	//	'actions'
	//	actiondefinition+=Action actiondefinition+=Action*
	//	'endactions' ('variables'
	//	variable+=ConVariable variable+=ConVariable*
	//	'endvariables')?
	//	'transitions'
	//	transition+=Transition transition+=Transition*
	//	'endtransitions'
	//	'begin'
	//	'startlocation' startlocation=[Location|EString]
	//	'errorlocation' errorlocation=[Location|EString]
	//	'endsystem';
	public SimpleSystemElements getSimpleSystemAccess() {
		return pSimpleSystem;
	}
	
	public ParserRule getSimpleSystemRule() {
		return getSimpleSystemAccess().getRule();
	}
	
	//ConVariable Variable:
	//	ContinuousVariable | Clock;
	public ConVariableElements getConVariableAccess() {
		return pConVariable;
	}
	
	public ParserRule getConVariableRule() {
		return getConVariableAccess().getRule();
	}
	
	//ContinuousVariable Variable:
	//	{Variable}
	//	'variable' name=EString;
	public ContinuousVariableElements getContinuousVariableAccess() {
		return pContinuousVariable;
	}
	
	public ParserRule getContinuousVariableRule() {
		return getContinuousVariableAccess().getRule();
	}
	
	//Clock:
	//	{Clock}
	//	'clock' name=EString;
	public ClockElements getClockAccess() {
		return pClock;
	}
	
	public ParserRule getClockRule() {
		return getClockAccess().getRule();
	}
	
	//FuzzySet:
	//	{FuzzySet}
	//	'fuzzysets' name=EString
	//	membershipfunction+=MembershipFunction membershipfunction+=MembershipFunction*
	//	'end';
	public FuzzySetElements getFuzzySetAccess() {
		return pFuzzySet;
	}
	
	public ParserRule getFuzzySetRule() {
		return getFuzzySetAccess().getRule();
	}
	
	//MembershipFunction:
	//	Lambda | Trapezoid | Alpha;
	public MembershipFunctionElements getMembershipFunctionAccess() {
		return pMembershipFunction;
	}
	
	public ParserRule getMembershipFunctionRule() {
		return getMembershipFunctionAccess().getRule();
	}
	
	//Alpha:
	//	{Alpha}
	//	'alpha' name=EString 'on' variable=[Variable|EString] '(' a=DOUBLE ',' b=DOUBLE ')';
	public AlphaElements getAlphaAccess() {
		return pAlpha;
	}
	
	public ParserRule getAlphaRule() {
		return getAlphaAccess().getRule();
	}
	
	//Lambda:
	//	{Lambda}
	//	'lambda' name=EString 'on' variable=[Variable|EString] '(' a=DOUBLE ',' u=DOUBLE ',' b=DOUBLE ')';
	public LambdaElements getLambdaAccess() {
		return pLambda;
	}
	
	public ParserRule getLambdaRule() {
		return getLambdaAccess().getRule();
	}
	
	//Trapezoid:
	//	{Trapezoid}
	//	'trapezoid' name=EString 'on' variable=[Variable|EString] '(' a=DOUBLE ',' b=DOUBLE ')';
	public TrapezoidElements getTrapezoidAccess() {
		return pTrapezoid;
	}
	
	public ParserRule getTrapezoidRule() {
		return getTrapezoidAccess().getRule();
	}
	
	//RuleSet:
	//	DiscreteEventRuleset | ContinuousEventRuleSet;
	public RuleSetElements getRuleSetAccess() {
		return pRuleSet;
	}
	
	public ParserRule getRuleSetRule() {
		return getRuleSetAccess().getRule();
	}
	
	//DiscreteEventRuleset:
	//	{DiscreteEventRuleset}
	//	'discreteeventruleset' name=EString ('discreteevents'
	//	discreteevent+=DiscreteEvent (',' discreteevent+=DiscreteEvent)*)?
	//	'endevents'
	//	'endruleset';
	public DiscreteEventRulesetElements getDiscreteEventRulesetAccess() {
		return pDiscreteEventRuleset;
	}
	
	public ParserRule getDiscreteEventRulesetRule() {
		return getDiscreteEventRulesetAccess().getRule();
	}
	
	//ContinuousEventRuleSet ContinuousEventRuleset:
	//	{ContinuousEventRuleset}
	//	'continouseventruleset' name=EString
	//	'rules'
	//	rule+=Rule rule+=Rule*
	//	'endrules'
	//	'endruleset';
	public ContinuousEventRuleSetElements getContinuousEventRuleSetAccess() {
		return pContinuousEventRuleSet;
	}
	
	public ParserRule getContinuousEventRuleSetRule() {
		return getContinuousEventRuleSetAccess().getRule();
	}
	
	//DiscreteEvent:
	//	{DiscreteEvent}
	//	'discreteevent' name=EString;
	public DiscreteEventElements getDiscreteEventAccess() {
		return pDiscreteEvent;
	}
	
	public ParserRule getDiscreteEventRule() {
		return getDiscreteEventAccess().getRule();
	}
	
	//Rule:
	//	FuzzyRule | CrispGuard;
	public RuleElements getRuleAccess() {
		return pRule;
	}
	
	public ParserRule getRuleRule() {
		return getRuleAccess().getRule();
	}
	
	//CrispGuard:
	//	{CrispGuard}
	//	'crisprule' name=EString ':=' relationexpression=RelationExpression;
	public CrispGuardElements getCrispGuardAccess() {
		return pCrispGuard;
	}
	
	public ParserRule getCrispGuardRule() {
		return getCrispGuardAccess().getRule();
	}
	
	//RelationExpression:
	//	GreaterExpression | LessExpression;
	public RelationExpressionElements getRelationExpressionAccess() {
		return pRelationExpression;
	}
	
	public ParserRule getRelationExpressionRule() {
		return getRelationExpressionAccess().getRule();
	}
	
	//GreaterExpression:
	//	{GreaterExpression} variable=[Variable|EString] '>' c=DOUBLE;
	public GreaterExpressionElements getGreaterExpressionAccess() {
		return pGreaterExpression;
	}
	
	public ParserRule getGreaterExpressionRule() {
		return getGreaterExpressionAccess().getRule();
	}
	
	//LessExpression:
	//	{LessExpression} variable=[Variable|EString] '<' c=DOUBLE;
	public LessExpressionElements getLessExpressionAccess() {
		return pLessExpression;
	}
	
	public ParserRule getLessExpressionRule() {
		return getLessExpressionAccess().getRule();
	}
	
	//FuzzyRule:
	//	{FuzzyRule}
	//	'fuzzyrule'
	//	'end';
	public FuzzyRuleElements getFuzzyRuleAccess() {
		return pFuzzyRule;
	}
	
	public ParserRule getFuzzyRuleRule() {
		return getFuzzyRuleAccess().getRule();
	}
	
	//Location:
	//	{Location}
	//	'location' name=EString ('do' cyclicaction=[ActionDefinition|EString])?
	//	'end';
	public LocationElements getLocationAccess() {
		return pLocation;
	}
	
	public ParserRule getLocationRule() {
		return getLocationAccess().getRule();
	}
	
	//Transition:
	//	{Transition}
	//	'transition' name=EString ':' source=[Location|EString] '->' target=[Location|EString] 'trigger'
	//	trigger=[DiscreteEvent|EString] ('action' actiondefinition=[ActionDefinition|EString])? ('invariant'
	//	invariant=[Rule|EString])?;
	public TransitionElements getTransitionAccess() {
		return pTransition;
	}
	
	public ParserRule getTransitionRule() {
		return getTransitionAccess().getRule();
	}
	
	//Action ActionDefinition:
	//	{ActionDefinition}
	//	'action'
	//	'name' name=EString ('reset' reset=[Clock|EString])?;
	public ActionElements getActionAccess() {
		return pAction;
	}
	
	public ParserRule getActionRule() {
		return getActionAccess().getRule();
	}
	
	//terminal DOUBLE returns ecore::EDouble:
	//	'0'..'9'+ '.' '0'..'9'+;
	public TerminalRule getDOUBLERule() {
		return tDOUBLE;
	}
	
	//EString:
	//	STRING | ID;
	public EStringElements getEStringAccess() {
		return pEString;
	}
	
	public ParserRule getEStringRule() {
		return getEStringAccess().getRule();
	}
	
	//terminal ID:
	//	'^'? ('a'..'z' | 'A'..'Z' | '_') ('a'..'z' | 'A'..'Z' | '_' | '0'..'9')*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	}
	
	//terminal INT returns ecore::EInt:
	//	'0'..'9'+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	}
	
	//terminal STRING:
	//	'"' ('\\' . | !('\\' | '"'))* '"' |
	//	"'" ('\\' . | !('\\' | "'"))* "'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	}
	
	//terminal ML_COMMENT:
	//	'/*'->'*/';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	}
	
	//terminal SL_COMMENT:
	//	'//' !('\n' | '\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	}
	
	//terminal WS:
	//	' ' | '\t' | '\r' | '\n'+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	}
	
	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	}
}
